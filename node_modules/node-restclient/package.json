{
  "name": "node-restclient",
  "version": "0.0.1",
  "description": "node-restclient adds easy-to-use api for basic http methods",
  "keywords": [
    "rest",
    "http"
  ],
  "engines": [
    "node"
  ],
  "directories": {
    "lib": "./lib"
  },
  "main": "./lib/restclient.js",
  "readme": "Node RestClient\n===============\n\nSometimes dabbling in HTTP Client connection and body processing can get messy. Never fear, Node-RestClient is here! Sporting a spiffy \"jQuery\" style familiar API, Node-RestClient bends to your every whim.\n\nExamples\n--------\n\n\n\tvar restclient = require('./restclient'), sys = require(\"sys\");\n\trestclient.get(\"http://twitter.com/statuses/show/4.json\", function(result) { sys.puts(result); }, \"json\");\n\trestclient.post(\"http://username:password@twitter.com/statuses/update.json\", {status: \"I love Node.js\"}, function(result) { sys.puts(result);  }, \"json\");\n\nAPI\n---\n\n`\nrestclient.get( url, [data], [callback], [type] )\n`\n\n**url** A standard URL or a Basic Authentication encoded URL (as shown above), it will automatically figure out what to do! Optional.\n\n**data** Key/value pairs that will be sent to the server. Optional.\n\n**callback** A function to be executed whenever the data is loaded successfully. Optional.\n\n**type** Either \"text\" or \"json\". Optional.\n\n\nSummary\n-------\n\nAnd just like that you can consume web-services with the elegance of a ruby, but the speed of a V8! Due note that just like jQuery, the result returned will be a JSON object if \"json\" is specified as the type.\n",
  "readmeFilename": "README.md",
  "_id": "node-restclient@0.0.1",
  "dist": {
    "shasum": "cdcd5dff420fc1487a6ef4413d93d149a151b78b"
  },
  "_from": "node-restclient@0.0.1",
  "_resolved": "https://registry.npmjs.org/node-restclient/-/node-restclient-0.0.1.tgz"
}
